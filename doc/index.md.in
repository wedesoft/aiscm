# AIscm Reference Manual

[![GPLv3](gplv3.png)](https://www.gnu.org/copyleft/gpl.html) [![Travis CI](travis.png)](https://travis-ci.com/wedesoft/aiscm)

This manual is for **AIscm** (version @VERSION@).

[**AIscm**][1] is a **[Guile][2] extension for numerical arrays and tensors**.
Performance is achieved by using the LLVM JIT compiler.

<div class="figure">
<p><a href="installation.html" title="Installation"><strong>Installation</strong> <img src="aiscm.gif" alt=""/> <strong>Installation</strong></a></p>
</div>

## Documentation

* [Installation](installation.html "Installation")
* [Built-in assembler](assembler.html "Built-in assembler")
* [Input/output](io.html "Input/output")
* [Arrays](array.html "Arrays")
* [Array operations](operation.html "Array operations")
* [Convolutions](convolution.html "Convolutions")
* [Tensorflow bindings](tensorflow.html "Tensorflow bindings")

## See also

* [Github page](https://github.com/wedesoft/aiscm)
* [Gitlab page](https://gitlab.com/wedesoft/aiscm)
* [Bitbucket page](https://bitbucket.org/wedesoft/aiscm)
* [Initial package review email thread](https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=837167)
* [Debian package tracker](https://tracker.debian.org/pkg/aiscm)
* [Debian build logs](https://buildd.debian.org/status/package.php?p=aiscm&suite=sid)
* [Ubuntu Launchpad entry](https://launchpad.net/ubuntu/+source/aiscm/)

## Credits

* Jan Wedekind: software development
* Andrey Rahmatullin: Debian package sponsor
* Gianfranco Costamagna: Ubuntu package

## External links

* [LLVM ORC JIT C API](https://www.doof.me.uk/2017/05/11/using-orc-with-llvms-c-api/)
* [Chainer: A Powerful, Flexible, and Intuitive Framework of Neural Networks](http://chainer.org/)
* [DyNet: dynamic neural networks library](https://github.com/clab/dynet)
* [Torch: Scientific computing for LuaJIT](http://torch.ch/)
* [Theano: Python library for JIT compiled array operations](http://deeplearning.net/software/theano/)
* [PyTorch: Tensors and dynamic neural networks in Python with strong GPU acceleration](http://pytorch.org/)
* [Tensorflow: numerical computing with dataflow graphs](https://www.tensorflow.org/)
* [tensorflow.rb](https://github.com/somaticio/tensorflow.rb)
* [Numpy: Python library implementing n-dimensional arrays](http://www.numpy.org/)
* [Bergstra et al.: Theano: A CPU and GPU math compiler in Python](http://www.iro.umontreal.ca/~lisa/pointeurs/theano_scipy2010.pdf)
* [Lush: large-scale numerical computing](http://lush.sourceforge.net/)
* [Vigracket: Vigra bindings for Racket](https://github.com/BSeppke/vigracket)
* [Ceemple C++ OpenCV IDE](http://www.ceemple.com/)
* [Arrayfire: accelerated computing library](http://arrayfire.com/)
* [Halide: a language for image processing and computational photography](http://halide-lang.org/)
* [PeachPy: Portable assembly for Python](https://github.com/Maratyszcza/PeachPy)
* [Guile manual](http://www.gnu.org/software/guile/manual/)
* [Guile-CV: computer vision library functional programming library for Guile](https://www.gnu.org/software/guile-cv/)
* [GOOPS: object-oriented extension to Guile](https://www.gnu.org/software/goops/)
* [COOPS: Chicken Scheme object system](http://wiki.call-cc.org/eggref/4/coops)
* [System V Application Binary Interface](http://www.x86-64.org/documentation/abi.pdf)
* [Intel® 64 and IA-32 Architectures Software Developer Manuals](http://www.intel.com/content/www/us/en/processors/architectures-software-developer-manuals.html)
* [CLASP: Lisp with LLVM Jit and C++ foreign interface](https://github.com/drmeister/clasp)
* [Embedded Language for Accelerated Array Computations](https://github.com/AccelerateHS/accelerate)
* [SymPy: computer algebra in Python](http://www.sympy.org/)
* [Maxima computer algebra system](http://maxima.sourceforge.net/)
* [Julia language](https://julialang.org/)
* [Kona language](https://github.com/kevinlawler/kona)
* [Guile SDL2](https://dthompson.us/projects/guile-sdl2.html)
* [Guile OpenGL](https://github.com/guildhall/guile-opengl)
* [Jakobsen: Advanced Character Physics](http://www.cs.cmu.edu/afs/cs/academic/class/15462-s13/www/lec_slides/Jakobsen.pdf)
* [COMP768: Rigid Body Dynamics (I)](http://www.cs.unc.edu/~lin/COMP768-F07/LEC/rbd1.pdf) [(I)](http://www.cs.unc.edu/~lin/COMP768-F07/LEC/rbd2.pdf)

Copyright © 2013, 2014, 2015, 2016, 2017, 2018, 2019 Jan Wedekind.

[1]: http://wedesoft.github.io/aiscm/ "AIscm"
[2]: http://www.gnu.org/software/guile/ "Guile programming language"
